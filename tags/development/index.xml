<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Petra Cipher Docs – development</title><link>https://sinsiway-official.github.io/tags/development/</link><description>Recent content in development on Petra Cipher Docs</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Tue, 11 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sinsiway-official.github.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: PcAPI_initialize → void</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-initilize/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-initilize/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_initialize&lt;/span>(&lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>info_file_path, &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>credentials_pw);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>PcAPI_initialize 함수는 libpcapi.so 라이브러리를 사용하기 위한 구성 파일을 설정합니다. 구성 파일은 키 관리 서버 설정과 인증에 필요한 자격 증명 정보 등을 포함하고 있습니다.
함수의 info_file_path 매개변수에는 구성 파일의 전체 경로와 파일명을 입력해야 하며, credentials_pw 매개변수에는 자격 증명 비밀번호를 입력해야 합니다. 이 비밀번호는 info_file_path 파일의 내용 중 credentials 값을 발급할 때 사용한 비밀번호와 동일해야 합니다. 만약 비밀번호를 사용하지 않았다면 빈 값(&amp;quot;&amp;quot;)을 입력하면 됩니다.&lt;/p>
&lt;p>함수가 호출되지 않았을 때 기본적으로 읽어오는 경로는 &amp;ldquo;/var/tmp/.petra/petra_cipher_api.conf&amp;rdquo; 이며, 비밀번호는 사용되지 않습니다.&lt;/p>
&lt;p>자세한 정보는 &amp;ldquo;&lt;a href="../../get-started/installation/linux/#%EA%B5%AC%EC%84%B1-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95">설치 가이드 - 구성 파일&lt;/a>&amp;rdquo; 부분을 참고하시기 바랍니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 &lt;strong>0&lt;/strong>을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30502">-30502&lt;/a>, &lt;a href="../../../error-codes/#-30511">-30511&lt;/a>&lt;/p>
&lt;h3 id="note">NOTE&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
일반적으로 &lt;strong>PcAPI_initialize()&lt;/strong> 함수는 기본 경로인 &lt;strong>/var/tmp/.petra/petra_cipher_api.conf 를 사용할 수 있을 경우 호출하지 않고 기본 경로를 사용합니다.&lt;/strong>
예외적으로 시스템 보안 솔루션 혹은 정책에 따라 /var/tmp 에 대한 사용 권한을 얻지 못하거나 주기적으로 /var/tmp 이하 파일을 자동으로 제거하는 솔루션이 동작하는 등 /var/tmp 경로를 사용하기 어려운 환경에서만 사용됩니다.
&lt;/div></description></item><item><title>Docs: PcAPI_getSession → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-getsession/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-getsession/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_getSession&lt;/span>(&lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span> client_ip);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_getSession&lt;/strong> 함수는 인자로 전달받은 &lt;strong>client_ip&lt;/strong>를 해시 스트링으로 변환한 후, 이를 이용하여 키 서버 세션 풀에서 세션을 찾습니다.&lt;/p>
&lt;p>만약 기존 세션이 존재하면, 기존 세션을 반환하고, 세션 풀에 세션이 존재하지 않을 경우 새로운 세션을 생성하여 &lt;strong>세션 ID&lt;/strong>를 나타내는 &lt;strong>signed 32-bit 정수&lt;/strong>를 반환합니다. 반환된 세션 ID는 암/복호화에서 사용됩니다.&lt;/p>
&lt;p>또한, 반환된 세션 ID는 서버 측에서 로깅 및 감사 목적으로 사용될 수 있습니다. 이를 통해 암호화/복호화에 대한 감사 추적이 가능합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 세션 ID를 나타내는 &lt;strong>signed 32-bit 정수&lt;/strong>를 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30309">-30309&lt;/a>, &lt;a href="../../../error-codes/#-30310">-30310&lt;/a>, &lt;a href="../../../error-codes/#-30312">-30312&lt;/a>, &lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30340">-30340&lt;/a>, &lt;a href="../../../error-codes/#-30341">-30341&lt;/a>, &lt;a href="../../../error-codes/#-30342">-30342&lt;/a>, &lt;a href="../../../error-codes/#-30343">-30343&lt;/a>, &lt;a href="../../../error-codes/#-30344">-30344&lt;/a>&lt;/p></description></item><item><title>Docs: PcAPI_encrypt_name → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-encrypt-name/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-encrypt-name/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_encrypt_name&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> api_sid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>enc_col_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>src,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> src_len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_encrypt_name&lt;/strong> 함수는 Petra Cipher Key Server에서 생성한 암호화 컬럼의 이름인 &lt;strong>enc_col_name&lt;/strong>과 소스 데이터인 &lt;strong>src&lt;/strong>를 입력받아, 소스 데이터를 해당 암호화 컬럼을 사용하여 암호화하는 기능을 제공합니다.&lt;/p>
&lt;p>&lt;strong>api_sid&lt;/strong> 에는 &lt;strong>PcAPI_getSession&lt;/strong> 함수를 호출하여 반환된 &lt;strong>세션 ID&lt;/strong>가 전달되어야 합니다. 세션 ID는 Petra Cipher Key Server와의 통신에 사용되며 사용하려는 키에 대한 접근 권한이나 감사데이터에서 사용자 구분 등에 사용됩니다.&lt;/p>
&lt;p>함수의 실행 결과로는 암호화 된 데이터가 &lt;strong>dst&lt;/strong> 버퍼에 저장되며, 암호화 된 데이터의 길이가 &lt;strong>dst_len&lt;/strong> 매개변수에 저장됩니다. dst_len은 dst 버퍼의 크기만큼 전달되어야 하며, 최소한 src_len보다는 크도록 해야합니다. &lt;strong>일반적으로 dst 버퍼의 크기는 src 버퍼의 2배 정도 크기로 충분하게 사용됩니다.&lt;/strong>&lt;/p>
&lt;p>다만, PcAPI_encrypt_name 실행 후에 dst 버퍼에서 암호화 된 데이터 끝에 마지막 값이 없기 때문에 dst에서 dst_len 길이 만큼 잘라서 사용하거나 dst 버퍼를 바로 사용하려면 &lt;code>dst[dst_len] ='\0'&lt;/code> 형태로 데이터의 마지막을 표현해주어야 합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 0을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30115">-30115&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30301">-30301&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>&lt;/p></description></item><item><title>Docs: PcAPI_decrypt_name → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-decrypt-name/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-decrypt-name/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_decrypt_name&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> api_sid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>enc_col_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>src,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> src_len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_decrypt_name&lt;/strong> 함수는 Petra Cipher Key Server에서 생성한 암호화 컬럼의 이름인 &lt;strong>enc_col_name&lt;/strong>과 암호화된 데이터인 &lt;strong>src&lt;/strong>를 입력받아, 해당 암호화 컬럼을 사용하여 원본 데이터를 복호화하는 기능을 제공합니다. 주의할 점은, enc_col_name 매개변수는 암호화 함수(&lt;strong>PcAPI_encrypt_name&lt;/strong>)에서 사용했던 &lt;strong>암호화 컬럼의 이름과 동일&lt;/strong>해야 한다는 것입니다. 이를 지키지 않으면 복호화가 실패합니다.&lt;/p>
&lt;p>&lt;strong>api_sid&lt;/strong>에는 &lt;strong>PcAPI_getSession&lt;/strong> 함수를 호출하여 반환된 &lt;strong>세션 ID&lt;/strong>가 전달되어야 합니다. 세션 ID는 Petra Cipher Key Server와의 통신에 사용되며 사용하려는 키에 대한 접근 권한이나 감사데이터에서 사용자 구분 등에 사용됩니다.&lt;/p>
&lt;p>함수의 실행 결과로는 복호화된 데이터가 &lt;strong>dst&lt;/strong> 버퍼에 저장되며, 복호화된 데이터의 길이가 &lt;strong>dst_len&lt;/strong> 매개변수에 저장됩니다. dst_len은 dst 버퍼의 크기만큼 전달되어야 하며, 최소한 src_len보다는 크도록 해야합니다. 일반적으로 dst 버퍼의 크기는 src 버퍼의 크기와 동일하게 설정됩니다.
복호화가 성공하면 dst에는 원본 데이터가 들어가고 dst_len에는 원본 데이터의 길이가 들어가게 됩니다.&lt;/p>
&lt;p>하지만 PcAPI_decrypt_name 실행 후에 dst 버퍼에서 원본 데이터 끝에 마지막 값이 없기 때문에 dst에서 dst_len 길이 만큼 잘라서 사용하거나 dst 버퍼를 바로 사용하려면 &lt;code>dst[dst_len] ='\0'&lt;/code> 형태로 데이터의 마지막을 표현해주어야 합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 0을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30105">-30105&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30107">-30107&lt;/a>, &lt;a href="../../../error-codes/#-30108">-30108&lt;/a>, &lt;a href="../../../error-codes/#-30111">-30111&lt;/a>, &lt;a href="../../../error-codes/#-30116">-30116&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30118">-30118&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>, &lt;a href="../../../error-codes/#-30401">-30401&lt;/a>&lt;/p></description></item><item><title>Docs: Implementation</title><link>https://sinsiway-official.github.io/docs/c-cpp/implementation/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/implementation/</guid><description>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> argc, &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>argv[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> encryptText[&lt;span style="color:#bd93f9">1024&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> decryptText[&lt;span style="color:#bd93f9">1024&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> sid &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_getSession(&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>keyName &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;ARIA-256-B64&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> rtn &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>plainText &lt;span style="color:#ff79c6">=&lt;/span> (&lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>)&lt;span style="color:#f1fa8c">&amp;#34;sinsiway petra cipher&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> encryptTextLen &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> decryptTextLen &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(encryptText, &lt;span style="color:#bd93f9">0&lt;/span>, encryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(decryptText, &lt;span style="color:#bd93f9">0&lt;/span>, decryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rtn &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_encrypt_name(sid, keyName, plainText, strlen((&lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>)plainText), encryptText, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>encryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rtn &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_decrypt_name(sid, keyName, encryptText, encryptTextLen, decryptText, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>decryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>주어진 예제 소스 코드는 PetraCipher 라이브러리인 &lt;strong>libpcapi.so&lt;/strong>를 사용하여 세션을 얻고 암호화/복호화 함수를 사용하는 방법을 보여주는 예시입니다.&lt;/p>
&lt;p>소스 코드에서는 PcAPIL.h 헤더 파일을 사용하여 PetraCipher 라이브러리를 호출합니다. &lt;strong>PcAPI_getSession()&lt;/strong> 함수를 사용하여 &lt;strong>세션 ID&lt;/strong>를 얻고, &lt;strong>PcAPI_encrypt_name()&lt;/strong> 및 &lt;strong>PcAPI_decrypt_name()&lt;/strong> 함수를 사용하여 데이터를 암호화하고 복호화합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리를 사용하려면 먼저 세션을 얻어야하며, 각 함수에서 세션 ID, 암호화 키 이름, 평문 데이터 등을 매개변수로 전달해야합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리는 데이터 보호 및 안전한 통신을 위해 설계되었으며 다양한 애플리케이션에서 사용할 수 있습니다. 제공된 소스 코드는 라이브러리의 기본 사용법을 보여주며, 더 자세한 정보는 라이브러리의 문서에서 확인할 수 있습니다.&lt;/p></description></item><item><title>Docs: Methods</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/</guid><description/></item><item><title>Docs: Error Codes</title><link>https://sinsiway-official.github.io/docs/error-codes/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/error-codes/</guid><description>
&lt;h3 id="-30101">-30101&lt;/h3>
&lt;p>이 에러는 SEED 알고리즘을 사용하는 경우, 키의 길이가 128 비트 또는 256 비트가 아닐 때 발생합니다. 이 경우, 개발사에 문의하여 올바른 키 설정 정보를 확인해야 합니다.&lt;/p>
&lt;h3 id="-30103">-30103&lt;/h3>
&lt;p>이 에러는 암호화 라이브러리에서 지원하지 않는 암호화 알고리즘을 사용할 때 발생합니다. 이 경우, 개발사에 문의하여 지원하는 암호화 알고리즘을 사용하도록 설정 정보를 수정해야 합니다.&lt;/p>
&lt;h3 id="-30105">-30105&lt;/h3>
&lt;p>이 에러는 복호화된 결과 데이터가 출력 버퍼의 크기보다 큰 경우 발생합니다. 이 경우, 출력 버퍼의 크기를 적절히 조정하여 복호화된 데이터를 저장할 수 있도록 해야 합니다.&lt;/p>
&lt;h3 id="-30106">-30106&lt;/h3>
&lt;p>이 에러는 SHA(Secure Hash Algorithm) 해시 함수에서 256, 384, 512 비트 이외의 다른 비트 수를 사용할 때 발생합니다. 이 경우, 개발사에 문의하여 올바른 설정 정보를 확인해야 합니다.&lt;/p>
&lt;h3 id="-30107">-30107&lt;/h3>
&lt;p>이 에러는 암호화된 데이터의 길이가 유효하지 않은 경우 발생합니다. 이 경우, 복호화할 데이터의 길이를 확인하여 유효한 길이인지 확인해야 합니다.&lt;/p>
&lt;h3 id="-30108">-30108&lt;/h3>
&lt;p>이 에러는 복호화할 데이터의 길이가 암호화에 사용된 알고리즘과 모드, 인코딩 등의 설정에 따라 정해진 최소 길이 이하인 경우 발생합니다. 또한, 복호화할 데이터가 null이거나 암호화되지 않은 데이터를 복호화하려는 경우에도 발생합니다. 이 경우, 복호화할 데이터의 길이를 적절하게 조정하거나, 올바른 암호화 설정을 사용하여 다시 암호화한 데이터를 이용해 복호화를 시도해야 합니다. 또는, 복호화할 데이터가 null인 경우 해당 에러코드를 무시하고 정상적으로 처리할 수 있습니다.&lt;/p>
&lt;h3 id="-30111">-30111&lt;/h3>
&lt;p>이 에러는 복호화에 사용되는 입력 파라미터 값이 유효하지 않을 때 발생합니다. 특히, 복호화 함수에 SHA 또는 HMAC과 같은 해시 함수를 사용할 수 없습니다. 이 경우, 사용하려는 키에 대한 알고리즘이 복호화를 지원하는 대칭키 알고리즘인지 확인해야 합니다.&lt;/p>
&lt;h3 id="-30115">-30115&lt;/h3>
&lt;p>이 에러는 이미 암호화된 데이터를 다시 암호화하려고 할 때 발생합니다. 이 경우, 데이터가 이미 암호화된 데이터가 아닌지 확인해야 합니다.&lt;/p>
&lt;h3 id="-30116">-30116&lt;/h3>
&lt;p>이 에러는 트레일러 값이 유효하지 않은 경우 발생합니다. 트레일러 값의 길이가 암호화 블록 크기를 초과하거나 0보다 작은 경우이며, 이는 복호화를 실패시키는 원인이 됩니다. 이 경우, 복호화하려는 데이터와 사용하는 키를 다시 한번 확인해야 합니다.&lt;/p>
&lt;h3 id="-30117">-30117&lt;/h3>
&lt;p>이 에러는 암호화 혹은 복호화 메타데이터 초기화에 실패했을 때 발생합니다. 이 경우, 라이브러리가 지원하는 알고리즘과 키 사이즈, 암호 모드 등을 다시 확인해보아야 합니다.&lt;/p>
&lt;h3 id="-30118">-30118&lt;/h3>
&lt;p>이 에러는 패딩이 유효하지 않을 때 발생합니다. 복호화를 수행하는 경우 패딩을 제거해야 하는데, 패딩이 잘못되었거나 없는 경우 발생할 수 있습니다. 이 경우, 복호화하려는 데이터와 사용하는 키를 다시 한번 확인해야 합니다.&lt;/p>
&lt;h3 id="-30301">-30301&lt;/h3>
&lt;p>이 에러는 암호화 키를 요청한 세션이 암호화 키에 대한 접근 권한이 없을 때 발생합니다. 이 경우, 사용자가 암호화 키에 대한 권한이 있는지 정책관리자에서 확인해야 합니다.&lt;/p>
&lt;h3 id="-30302">-30302&lt;/h3>
&lt;p>이 에러는 유효하지 않은 API 세션 ID를 사용했을 때 발생하는 오류입니다. 세션 정보를 가져오지 못했을 때 발생합니다. 이 경우, 암호화 라이브러리 구성 파일에 설정된 로그 파일을 확인하여 암호화 세션을 얻지 못한 자세한 원인을 분석해야 합니다.&lt;/p>
&lt;h3 id="-30309">-30309&lt;/h3>
&lt;p>이 에러는 API 세션을 얻는 과정에서 스핀락을 획득하지 못한 경우입니다. 이는 다른 스레드가 이미 해당 임계 영역에 대한 잠금을 보유하고 있기 때문일 수 있습니다. 이 경우, 잠시 후 다시 시도해보십시오.&lt;/p>
&lt;h3 id="-30310">-30310&lt;/h3>
&lt;p>이 에러는 키 서버 세션을 얻는 과정에서 래치락을 획득하지 못한 경우입니다. 이는 다른 스레드가 이미 해당 임계 영역에 대한 잠금을 보유하고 있기 때문일 수 있습니다. 이 경우, 잠시 후 다시 시도해보십시오.&lt;/p>
&lt;h3 id="-30312">-30312&lt;/h3>
&lt;p>이 에러는 세션풀에서 더 이상 사용 가능한 세션이 없을 때 발생합니다. 이 경우, 일정 시간 후에 다시 시도하거나 구성 파일에서 세션 풀의 최대치를 증가시켜 보시기 바랍니다.&lt;/p>
&lt;h3 id="-30315">-30315&lt;/h3>
&lt;p>이 에러는 구성 파일 파싱 오류가 발생했을 경우 반환됩니다. 구성 파일의 한 라인은 변수=값 형태로 존재해야 합니다. 예를 들어, 파싱할 라인에서 &amp;lsquo;=&amp;rsquo; 기호가 없거나, name이나 value에 공백문자가 들어가지 않도록 하는 등의 오류가 있을 때 발생할 수 있습니다. 이 경우, 구성 파일의 값을 확인해야 합니다.&lt;/p>
&lt;h3 id="-30316">-30316&lt;/h3>
&lt;p>이 에러는 구성 파일이 없는 경우이거나 파일은 있지만 실행하는 계정에 파일에 대한 읽기 권한이 없을 때 발생합니다. 구성 파일이 존재하는지 확인하고, 파일 또는 디렉토리와 파일에 대한 읽기 권한이 있는지 확인하세요. 일반적으로 구성파일은 /var/tmp/.petra/petra_cipher_api.conf 경로에 위치합니다. 이 경우, 구성 파일의 위치 및 권한을 수정해야 합니다.&lt;/p>
&lt;h3 id="-30340">-30340&lt;/h3>
&lt;p>키 서버 호스트 정보를 알 수 없을 때 발생하는 에러입니다. 이 경우, 구성 파일에서 keysvr.primary.host, keysvr.secondary.host, keysvr.third.host 값을 확인해보시기 바랍니다. 만약 구성 파일에서 정보가 없다면, 호스트 정보를 추가해야 합니다.&lt;/p>
&lt;h3 id="-30341">-30341&lt;/h3>
&lt;p>키 서버 세션이 소켓 통신 생성에 실패하였습니다. 이러한 실패 이유는 이미 사용 중인 포트를 할당하려고 하거나, 소켓을 생성하려는 프로세스에 충분한 권한이 없을 때, 또는 운영 체제 자원 부족 등의 이유가 있을 수 있습니다. 이 경우, ulimit -n 명령어를 통해 open files 옵션을 확인해 값을 증가해 볼 수 있습니다.&lt;/p>
&lt;h3 id="-30342">-30342&lt;/h3>
&lt;p>키 서버 세션 연결에 실패했습니다. 이 경우, 키 서버 세션 연결에 실패하는 이유는 다양합니다. 구성 파일을 확인하여 로그 파일을 통해 자세한 원인을 확인해야 합니다.&lt;/p>
&lt;h3 id="-30343">-30343&lt;/h3>
&lt;p>키 서버 소켓 통신에서 데이터 전송에 실패했습니다. 이러한 실패 이유는 다양할 수 있습니다. 예를 들어, 소켓이 이미 닫혀 있을 때, 소켓 연결이 끊어진 경우, 소켓 버퍼가 가득 차서 데이터를 보낼 수 없는 경우 등이 있을 수 있습니다. 이 경우, 자세한 정보는 구성 파일에서 로그 파일 경로를 확인하여 로그 파일을 분석해야 합니다.&lt;/p>
&lt;h3 id="-30344">-30344&lt;/h3>
&lt;p>키 서버 소켓 통신에서 데이터를 받아오는데 실패했습니다. 이러한 실패 이유는 다양할 수 있습니다. 예를 들어, 소켓이 이미 닫혀 있을 때, 소켓 연결이 끊어진 경우, 데이터를 수신할 수 없는 경우 등이 있을 수 있습니다. 이 경우, 자세한 정보는 구성 파일에서 로그 파일 경로를 확인하여 로그 파일을 분석해야 합니다.&lt;/p>
&lt;h3 id="-30351">-30351&lt;/h3>
&lt;p>키 이름을 확인할 수 없습니다. 이 경우, 입력으로 전달 된 키 이름이 키 서버에 존재하지 않을 때 발생합니다. 키 이름을 확인해야 합니다.&lt;/p>
&lt;h3 id="-30388">-30388&lt;/h3>
&lt;p>입력 된 데이터가 null 이거나 빈 문자열인데 character set convert 를 시도했을 때 발생합니다. 이 경우, character set convert 옵션을 확인해야 합니다.&lt;/p>
&lt;h3 id="-30401">-30401&lt;/h3>
&lt;p>복호화 키를 요청한 세션이 복호화 키에 대한 접근 권한이 없을 때 발생합니다. 이 경우, 사용자가 복호화 키에 대한 권한이 있는지 정책관리자에서 확인해야 합니다.&lt;/p>
&lt;h3 id="-30502">-30502&lt;/h3>
&lt;p>credential 정보가 유효하지 않은 경우 발생하는 에러입니다. 이 경우, credential 정보를 확인하고, 값이 올바른지 다시 한번 확인해보시기 바랍니다. credential 정보는 일반적으로 구성 파일에 저장되어 있으며, 사용자가 제공한 정보를 기반으로 인증 및 권한 부여를 수행합니다.&lt;/p>
&lt;h3 id="-30511">-30511&lt;/h3>
&lt;p>제품이 사용하는 국정원 검증 필 암호 모듈인 libklib.so 라이브러리 파일을 로드하지 못했을 때 발생합니다. 해당 파일이 시스템 혹은 동적 라이브러리 경로에 존재하는지 확인하고 실행 권한을 확인해야 합니다. 이 경우, 시스템의 동적 라이브러리 경로에 libklib.so 라이브러리 파일이 존재하는지 확인하고, 해당 파일의 실행 권한이 있는지 확인해야 합니다. 일반적으로 해당 파일은 /usr/lib 경로에 위치합니다. 파일이 없을 경우, 해당 파일을 설치하거나 다시 빌드하여 설치해야 합니다. 파일이 있지만 실행 권한이 없을 경우, chmod 명령어를 사용하여 실행 권한을 추가해야 합니다.&lt;/p>
&lt;h3 id="-30701">-30701&lt;/h3>
&lt;p>키 서버에 대한 정보를 확인할 수 없는 경우 발생하는 에러입니다. 이 경우, keysvr.primary., keysvr.secondary., keysvr.third.*값을 구성 파일에서 확인해보세요. 이 값들은 일반적으로 키 서버의 IP 주소 및 포트 등의 정보를 포함합니다. 이 정보가 올바른지 다시 한번 확인해보시기 바랍니다.&lt;/p></description></item></channel></rss>