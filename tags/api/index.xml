<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Petra Cipher Docs – api</title><link>https://sinsiway-official.github.io/tags/api/</link><description>Recent content in api on Petra Cipher Docs</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Fri, 21 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sinsiway-official.github.io/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: PcAPI_initialize → void</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-initilize/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-initilize/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_initialize&lt;/span>(&lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>info_file_path, &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>credentials_pw);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>PcAPI_initialize 함수는 libpcapi.so 라이브러리를 사용하기 위한 구성 파일을 설정합니다. 구성 파일은 키 관리 서버 설정과 인증에 필요한 자격 증명 정보 등을 포함하고 있습니다.
함수의 info_file_path 매개변수에는 구성 파일의 전체 경로와 파일명을 입력해야 하며, credentials_pw 매개변수에는 자격 증명 비밀번호를 입력해야 합니다. 이 비밀번호는 info_file_path 파일의 내용 중 credentials 값을 발급할 때 사용한 비밀번호와 동일해야 합니다. 만약 비밀번호를 사용하지 않았다면 빈 값(&amp;quot;&amp;quot;)을 입력하면 됩니다.&lt;/p>
&lt;p>함수가 호출되지 않았을 때 기본적으로 읽어오는 경로는 &amp;ldquo;/var/tmp/.petra/petra_cipher_api.conf&amp;rdquo; 이며, 비밀번호는 사용되지 않습니다.&lt;/p>
&lt;p>자세한 정보는 &amp;ldquo;&lt;a href="../../get-started/installation/linux/#%EA%B5%AC%EC%84%B1-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95">설치 가이드 - 구성 파일&lt;/a>&amp;rdquo; 부분을 참고하시기 바랍니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 &lt;strong>0&lt;/strong>을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30502">-30502&lt;/a>, &lt;a href="../../../error-codes/#-30511">-30511&lt;/a>&lt;/p>
&lt;h3 id="note">NOTE&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
일반적으로 &lt;strong>PcAPI_initialize()&lt;/strong> 함수는 기본 경로인 &lt;strong>/var/tmp/.petra/petra_cipher_api.conf 를 사용할 수 있을 경우 호출하지 않고 기본 경로를 사용합니다.&lt;/strong>
예외적으로 시스템 보안 솔루션 혹은 정책에 따라 /var/tmp 에 대한 사용 권한을 얻지 못하거나 주기적으로 /var/tmp 이하 파일을 자동으로 제거하는 솔루션이 동작하는 등 /var/tmp 경로를 사용하기 어려운 환경에서만 사용됩니다.
&lt;/div></description></item><item><title>Docs: PcAPI_getSession → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-getsession/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-getsession/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_getSession&lt;/span>(&lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span>&lt;span style="color:#ff79c6">*&lt;/span> client_ip);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_getSession&lt;/strong> 함수는 인자로 전달받은 &lt;strong>client_ip&lt;/strong>를 해시 스트링으로 변환한 후, 이를 이용하여 키 서버 세션 풀에서 세션을 찾습니다.&lt;/p>
&lt;p>만약 기존 세션이 존재하면, 기존 세션을 반환하고, 세션 풀에 세션이 존재하지 않을 경우 새로운 세션을 생성하여 &lt;strong>세션 ID&lt;/strong>를 나타내는 &lt;strong>signed 32-bit 정수&lt;/strong>를 반환합니다. 반환된 세션 ID는 암/복호화에서 사용됩니다.&lt;/p>
&lt;p>또한, 반환된 세션 ID는 서버 측에서 로깅 및 감사 목적으로 사용될 수 있습니다. 이를 통해 암호화/복호화에 대한 감사 추적이 가능합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 세션 ID를 나타내는 &lt;strong>signed 32-bit 정수&lt;/strong>를 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30309">-30309&lt;/a>, &lt;a href="../../../error-codes/#-30310">-30310&lt;/a>, &lt;a href="../../../error-codes/#-30312">-30312&lt;/a>, &lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30340">-30340&lt;/a>, &lt;a href="../../../error-codes/#-30341">-30341&lt;/a>, &lt;a href="../../../error-codes/#-30342">-30342&lt;/a>, &lt;a href="../../../error-codes/#-30343">-30343&lt;/a>, &lt;a href="../../../error-codes/#-30344">-30344&lt;/a>&lt;/p></description></item><item><title>Docs: PcAPI_encrypt_name → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-encrypt-name/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-encrypt-name/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_encrypt_name&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> api_sid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>enc_col_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>src,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> src_len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_encrypt_name&lt;/strong> 함수는 Petra Cipher Key Server에서 생성한 암호화 컬럼의 이름인 &lt;strong>enc_col_name&lt;/strong>과 소스 데이터인 &lt;strong>src&lt;/strong>를 입력받아, 소스 데이터를 해당 암호화 컬럼을 사용하여 암호화하는 기능을 제공합니다.&lt;/p>
&lt;p>&lt;strong>api_sid&lt;/strong> 에는 &lt;strong>PcAPI_getSession&lt;/strong> 함수를 호출하여 반환된 &lt;strong>세션 ID&lt;/strong>가 전달되어야 합니다. 세션 ID는 Petra Cipher Key Server와의 통신에 사용되며 사용하려는 키에 대한 접근 권한이나 감사데이터에서 사용자 구분 등에 사용됩니다.&lt;/p>
&lt;p>함수의 실행 결과로는 암호화 된 데이터가 &lt;strong>dst&lt;/strong> 버퍼에 저장되며, 암호화 된 데이터의 길이가 &lt;strong>dst_len&lt;/strong> 매개변수에 저장됩니다. dst_len은 dst 버퍼의 크기만큼 전달되어야 하며, 최소한 src_len보다는 크도록 해야합니다. &lt;strong>일반적으로 dst 버퍼의 크기는 src 버퍼의 2배 정도 크기로 충분하게 사용됩니다.&lt;/strong>&lt;/p>
&lt;p>다만, PcAPI_encrypt_name 실행 후에 dst 버퍼에서 암호화 된 데이터 끝에 마지막 값이 없기 때문에 dst에서 dst_len 길이 만큼 잘라서 사용하거나 dst 버퍼를 바로 사용하려면 &lt;code>dst[dst_len] ='\0'&lt;/code> 형태로 데이터의 마지막을 표현해주어야 합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 0을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30115">-30115&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30301">-30301&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>&lt;/p></description></item><item><title>Docs: getErrCode() → int</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-exception/geterrcode/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-exception/geterrcode/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">getErrCode&lt;/span>&lt;span style="color:#ff79c6">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>이 함수를 사용하여 &lt;strong>PcaException&lt;/strong>에서 발생한 에러 코드를 반환합니다. 함수가 의미하는 코드는 Petra Cipher API에서 발생한 &lt;strong>오류 코드&lt;/strong>입니다. 이 코드를 활용하여 암/복호화에서 발생할 수 있는 에러를 더 상세히 확인할 수 있습니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>PcaException 에서 발생한 에러 코드&lt;/p></description></item><item><title>Docs: PcAPI_decrypt_name → int</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-decrypt-name/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/c-api-pcapi-decrypt-name/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">PcAPI_decrypt_name&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> api_sid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>enc_col_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>src,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> src_len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>dst_len
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>&lt;strong>PcAPI_decrypt_name&lt;/strong> 함수는 Petra Cipher Key Server에서 생성한 암호화 컬럼의 이름인 &lt;strong>enc_col_name&lt;/strong>과 암호화된 데이터인 &lt;strong>src&lt;/strong>를 입력받아, 해당 암호화 컬럼을 사용하여 원본 데이터를 복호화하는 기능을 제공합니다. 주의할 점은, enc_col_name 매개변수는 암호화 함수(&lt;strong>PcAPI_encrypt_name&lt;/strong>)에서 사용했던 &lt;strong>암호화 컬럼의 이름과 동일&lt;/strong>해야 한다는 것입니다. 이를 지키지 않으면 복호화가 실패합니다.&lt;/p>
&lt;p>&lt;strong>api_sid&lt;/strong>에는 &lt;strong>PcAPI_getSession&lt;/strong> 함수를 호출하여 반환된 &lt;strong>세션 ID&lt;/strong>가 전달되어야 합니다. 세션 ID는 Petra Cipher Key Server와의 통신에 사용되며 사용하려는 키에 대한 접근 권한이나 감사데이터에서 사용자 구분 등에 사용됩니다.&lt;/p>
&lt;p>함수의 실행 결과로는 복호화된 데이터가 &lt;strong>dst&lt;/strong> 버퍼에 저장되며, 복호화된 데이터의 길이가 &lt;strong>dst_len&lt;/strong> 매개변수에 저장됩니다. dst_len은 dst 버퍼의 크기만큼 전달되어야 하며, 최소한 src_len보다는 크도록 해야합니다. 일반적으로 dst 버퍼의 크기는 src 버퍼의 크기와 동일하게 설정됩니다.
복호화가 성공하면 dst에는 원본 데이터가 들어가고 dst_len에는 원본 데이터의 길이가 들어가게 됩니다.&lt;/p>
&lt;p>하지만 PcAPI_decrypt_name 실행 후에 dst 버퍼에서 원본 데이터 끝에 마지막 값이 없기 때문에 dst에서 dst_len 길이 만큼 잘라서 사용하거나 dst 버퍼를 바로 사용하려면 &lt;code>dst[dst_len] ='\0'&lt;/code> 형태로 데이터의 마지막을 표현해주어야 합니다.&lt;/p>
&lt;h3 id="return-value">RETURN VALUE&lt;/h3>
&lt;p>성공 시 0을 반환합니다.&lt;/p>
&lt;p>오류가 발생하면 0 보다 작은 &lt;a href="../../../error-codes">에러 코드&lt;/a>를 반환합니다.&lt;/p>
&lt;h3 id="errors">ERRORS&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30105">-30105&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30107">-30107&lt;/a>, &lt;a href="../../../error-codes/#-30108">-30108&lt;/a>, &lt;a href="../../../error-codes/#-30111">-30111&lt;/a>, &lt;a href="../../../error-codes/#-30116">-30116&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30118">-30118&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>, &lt;a href="../../../error-codes/#-30401">-30401&lt;/a>&lt;/p></description></item><item><title>Docs: encrypt() → stString</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session/encrypt/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session/encrypt/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> String &lt;span style="color:#50fa7b">encrypt&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>String ecn&lt;span style="color:#ff79c6">,&lt;/span> String src&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">throws&lt;/span> PcaException
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>encrypt 함수는 암호화 컬럼 이름 enc과 평문 데이터 src를 파라미터로 사용합니다.&lt;/p>
&lt;p>ecn 파라미터에는 Petra Cipher Key Server에서 생성한 암호화 컬럼의 이름을 전달해야 합니다. src 파라미터에는 암호화하고자 하는 평문 데이터를 전달해야 합니다. 이 때, null 값을 전달하면 null을 반환합니다. encrypt 함수가 반환하는 값은 암호화된 데이터입니다. 이를 복호화하려면 decrypt 함수를 사용해야 합니다.&lt;/p>
&lt;p>PcaException이 발생할 수 있으므로, 예외처리를 반드시 해주어야 합니다.&lt;/p>
&lt;h3 id="return">RETURN&lt;/h3>
&lt;p>String 암호화 데이터&lt;/p>
&lt;h3 id="exception">EXCEPTION&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30115">-30115&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30301">-30301&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>&lt;/p></description></item><item><title>Docs: initialize() → static void</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/geterrcode/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/geterrcode/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">static&lt;/span> &lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">initialize&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>String conf_file_path&lt;span style="color:#ff79c6">,&lt;/span> String credentials_password&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">throws&lt;/span> PcaException
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>이 메소드는 세션 풀을 초기화하기 위한 구성 파일을 설정합니다. 구성 파일은 키 관리 서버 설정과 인증에 필요한 자격 증명 정보 등을 포함하고 있습니다.&lt;/p>
&lt;p>함수의 conf_file_path 매개변수에는 구성 파일의 전체 경로와 파일명을 입력해야 하며, credentials_password 매개변수에는 자격 증명 비밀번호를 입력해야 합니다. 이 비밀번호는 conf_file_path 파일의 내용 중 credentials 값을 발급할 때 사용한 비밀번호와 동일해야 합니다. 만약 비밀번호를 사용하지 않았다면 빈 값(&amp;quot;&amp;quot;)을 입력하면 됩니다.&lt;/p>
&lt;p>함수가 호출되지 않았을 때 기본적으로 읽어오는 경로는 &amp;ldquo;/var/tmp/.petra/petra_cipher_api.conf&amp;rdquo; 이며, 비밀번호는 사용되지 않습니다.
자세한 정보는 &amp;ldquo;설치 가이드 - 구성 파일&amp;rdquo; 부분을 참고하시기 바랍니다.&lt;/p>
&lt;p>만약 세션 풀 초기화에 실패하면 PcaException 예외를 throw 합니다. 이 예외는 &amp;ldquo;initialize failed. error code[에러코드]&amp;rdquo; 라는 메시지와 함께 던져집니다.&lt;/p>
&lt;h3 id="return">RETURN&lt;/h3>
&lt;p>void&lt;/p>
&lt;h3 id="exception">EXCEPTION&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30502">-30502&lt;/a>, &lt;a href="../../../error-codes/#-30511">-30511&lt;/a>&lt;/p></description></item><item><title>Docs: decrypt() → stString</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session/decrypt/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session/decrypt/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> String &lt;span style="color:#50fa7b">decrypt&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>String ecn&lt;span style="color:#ff79c6">,&lt;/span> String src&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">throws&lt;/span> PcaException
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>decrypt 함수는 암호화된 데이터인 src와 해당 암호화 컬럼의 이름인 ecn을 파라미터로 사용합니다.&lt;/p>
&lt;p>ecn 파라미터는 암호화 컬럼 이름을 전달해야 합니다. src 파라미터는 암호화된 데이터를 전달해야 합니다. 만약 null 값을 전달하면 null이 반환됩니다. decrypt 함수의 반환값은 복호화된 평문 데이터입니다.&lt;/p>
&lt;p>PcaException이 발생할 수 있으므로, 반드시 예외처리를 해주어야 합니다.&lt;/p>
&lt;h3 id="return">RETURN&lt;/h3>
&lt;p>String 복호화 데이터&lt;/p>
&lt;h3 id="exception">EXCEPTION&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30101">-30101&lt;/a>, &lt;a href="../../../error-codes/#-30103">-30103&lt;/a>, &lt;a href="../../../error-codes/#-30105">-30105&lt;/a>, &lt;a href="../../../error-codes/#-30106">-30106&lt;/a>, &lt;a href="../../../error-codes/#-30107">-30107&lt;/a>, &lt;a href="../../../error-codes/#-30108">-30108&lt;/a>, &lt;a href="../../../error-codes/#-30111">-30111&lt;/a>, &lt;a href="../../../error-codes/#-30116">-30116&lt;/a>, &lt;a href="../../../error-codes/#-30117">-30117&lt;/a>, &lt;a href="../../../error-codes/#-30118">-30118&lt;/a>, &lt;a href="../../../error-codes/#-30302">-30302&lt;/a>, &lt;a href="../../../error-codes/#-30351">-30351&lt;/a>, &lt;a href="../../../error-codes/#-30388">-30388&lt;/a>, &lt;a href="../../../error-codes/#-30401">-30401&lt;/a>&lt;/p></description></item><item><title>Docs: getSession() → static sinsiway.PcaSession</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/getsession/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/getsession/</guid><description>
&lt;h3 id="synopsis">SYNOPSIS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">static&lt;/span> sinsiway&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">PcaSession&lt;/span> &lt;span style="color:#50fa7b">getSession&lt;/span>&lt;span style="color:#ff79c6">()&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">throws&lt;/span> PcaException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">static&lt;/span> sinsiway&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">PcaSession&lt;/span> &lt;span style="color:#50fa7b">getSession&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>String client_ip&lt;span style="color:#ff79c6">,&lt;/span> String user_id&lt;span style="color:#ff79c6">,&lt;/span> String client_program&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">throws&lt;/span> PcaException
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="description">DESCRIPTION&lt;/h3>
&lt;p>PcaSessionPool 클래스의 getSession() 함수는 Petra Cipher Key Server에서 인가된 키 데이터를 사용하여 암호화 및 복호화를 수행하는 PcaSession 객체를 반환하는 함수입니다.&lt;/p>
&lt;p>이 함수는 client_ip, user_id, client_program을 매개변수로 받아 해당 정보를 사용하여 PcaSession 객체의 고유한 hash key를 생성합니다. 그리고 이 hash key를 사용하여 SessionPool에서 PcaSession 객체를 가져옵니다. 만약 SessionPool에서 PcaSession 객체를 찾지 못했다면, 새로운 PcaSession 객체를 생성하고 SessionPool에 추가하며, 이미 SessionPool에 PcaSession 객체가 존재한다면 해당 PcaSession 객체를 반환합니다.&lt;/p>
&lt;p>getSession() 함수 내부에서 예외 상황이 발생하면, PcaException 객체를 던져서 예외 상황을 처리하며, 이를 통해 클라이언트에서 예외를 처리할 수 있도록 도와줍니다.&lt;/p>
&lt;p>만약 특별히 권한 관리가 필요하지 않고 공유 세션을 위해 성능적인 부분에서 가장 많은 이점을 가지고 싶다면 매개변수가 없는 함수를 사용하여 모든 세션이 같은 세션을 공유하도록 사용할 수 있습니다.&lt;/p>
&lt;h3 id="return">RETURN&lt;/h3>
&lt;p>sinsiway.PcaSession 객체&lt;/p>
&lt;h3 id="exception">EXCEPTION&lt;/h3>
&lt;p>&lt;a href="../../../error-codes/#-30309">-30309&lt;/a>, &lt;a href="../../../error-codes/#-30310">-30310&lt;/a>, &lt;a href="../../../error-codes/#-30312">-30312&lt;/a>, &lt;a href="../../../error-codes/#-30315">-30315&lt;/a>, &lt;a href="../../../error-codes/#-30316">-30316&lt;/a>, &lt;a href="../../../error-codes/#-30340">-30340&lt;/a>, &lt;a href="../../../error-codes/#-30341">-30341&lt;/a>, &lt;a href="../../../error-codes/#-30342">-30342&lt;/a>, &lt;a href="../../../error-codes/#-30343">-30343&lt;/a>, &lt;a href="../../../error-codes/#-30344">-30344&lt;/a>&lt;/p></description></item><item><title>Docs: sinsiway.PcaException class</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-exception/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-exception/</guid><description>
&lt;p>&lt;strong>PcaException&lt;/strong> 클래스는 &lt;strong>Exception&lt;/strong> 클래스를 상속받아 구현된 사용자 정의 예외 클래스입니다.&lt;/p>
&lt;p>이 클래스는 생성자를 통해 예외 메시지와 에러 코드를 받아 객체를 생성하며, &lt;strong>getErrCode()&lt;/strong> 메소드를 제공하여 에러 코드를 반환할 수 있습니다.&lt;/p>
&lt;p>PcaException 클래스는 Petra Cipher API에서 발생한 예외를 처리하기 위해 사용됩니다. 예를 들어, API 호출 중 에러가 발생한 경우 해당 에러 코드와 함께 예외를 발생시켜, 호출한 쪽에서 적절하게 예외 처리를 할 수 있도록 도와줍니다. 상속받은 &lt;strong>getMessage()&lt;/strong>, &lt;strong>getCause()&lt;/strong>, &lt;strong>getStackTrace()&lt;/strong> 함수 외에 Petra Cipher 의 에러 코드를 확인할 수 있는 &lt;strong>getErrCode()&lt;/strong> 함수를 제공합니다.&lt;/p>
&lt;h2 id="constructors">Constructors&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>PcaException&lt;span style="color:#ff79c6">(&lt;/span>String msg&lt;span style="color:#ff79c6">,&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> errcode&lt;span style="color:#ff79c6">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PcaException&lt;span style="color:#ff79c6">(&lt;/span>String msg&lt;span style="color:#ff79c6">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: sinsiway.PcaSessionPool class</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session-pool/</guid><description>
&lt;p>&lt;strong>PcaSessionPool&lt;/strong> 클래스는 Petra Cipher Key Server와 연결된 세션을 관리하는 객체로, 세션 생성, 풀링, 사용, 반환 등의 작업을 처리할 수 있습니다.&lt;/p>
&lt;p>이를 통해 여러 클라이언트가 동시에 세션을 공유하고 세션 생성 및 삭제 비용을 줄여 시스템 성능을 최적화하고 효율적인 리소스 관리가 가능합니다.&lt;/p>
&lt;p>또한 세션 풀에서 세션이 재활용되기 때문에 한 번 사용된 데이터 키는 안전하게 보관되며, 이로 인해 동일한 암호화 키를 사용한 암/복호화 호출에 대해 최적의 성능을 보장할 수 있습니다.&lt;/p>
&lt;h2 id="constructors">Constructors&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>PcaSessionPool&lt;span style="color:#ff79c6">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Implementation</title><link>https://sinsiway-official.github.io/docs/c-cpp/implementation/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/implementation/</guid><description>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;#34;PcAPIL.h&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> argc, &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>argv[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> encryptText[&lt;span style="color:#bd93f9">1024&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> decryptText[&lt;span style="color:#bd93f9">1024&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> sid &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_getSession(&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>keyName &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;ARIA-256-B64&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> rtn &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>plainText &lt;span style="color:#ff79c6">=&lt;/span> (&lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>)&lt;span style="color:#f1fa8c">&amp;#34;sinsiway petra cipher&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> encryptTextLen &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">unsigned&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> decryptTextLen &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(encryptText, &lt;span style="color:#bd93f9">0&lt;/span>, encryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(decryptText, &lt;span style="color:#bd93f9">0&lt;/span>, decryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rtn &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_encrypt_name(sid, keyName, plainText, strlen((&lt;span style="color:#ff79c6">const&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> &lt;span style="color:#ff79c6">*&lt;/span>)plainText), encryptText, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>encryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rtn &lt;span style="color:#ff79c6">=&lt;/span> PcAPI_decrypt_name(sid, keyName, encryptText, encryptTextLen, decryptText, &lt;span style="color:#ff79c6">&amp;amp;&lt;/span>decryptTextLen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>주어진 예제 소스 코드는 PetraCipher 라이브러리인 &lt;strong>libpcapi.so&lt;/strong>를 사용하여 세션을 얻고 암호화/복호화 함수를 사용하는 방법을 보여주는 예시입니다.&lt;/p>
&lt;p>소스 코드에서는 PcAPIL.h 헤더 파일을 사용하여 PetraCipher 라이브러리를 호출합니다. &lt;strong>PcAPI_getSession()&lt;/strong> 함수를 사용하여 &lt;strong>세션 ID&lt;/strong>를 얻고, &lt;strong>PcAPI_encrypt_name()&lt;/strong> 및 &lt;strong>PcAPI_decrypt_name()&lt;/strong> 함수를 사용하여 데이터를 암호화하고 복호화합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리를 사용하려면 먼저 세션을 얻어야하며, 각 함수에서 세션 ID, 암호화 키 이름, 평문 데이터 등을 매개변수로 전달해야합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리는 데이터 보호 및 안전한 통신을 위해 설계되었으며 다양한 애플리케이션에서 사용할 수 있습니다. 제공된 소스 코드는 라이브러리의 기본 사용법을 보여주며, 더 자세한 정보는 라이브러리의 문서에서 확인할 수 있습니다.&lt;/p></description></item><item><title>Docs: Implementation</title><link>https://sinsiway-official.github.io/docs/java/implementation/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/implementation/</guid><description>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">import&lt;/span> sinsiway.*&lt;span style="color:#ff79c6">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">class&lt;/span> &lt;span style="color:#50fa7b">PetraCipher&lt;/span> &lt;span style="color:#ff79c6">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">static&lt;/span> &lt;span style="color:#8be9fd">void&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>String&lt;span style="color:#ff79c6">[]&lt;/span> args&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#ff79c6">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">try&lt;/span> &lt;span style="color:#ff79c6">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PcaSessionPool&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">initialize&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;/var/tmp/.petra/petra_cipher_api.conf&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">,&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sinsiway&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">PcaSession&lt;/span> session &lt;span style="color:#ff79c6">=&lt;/span> sinsiway&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">PcaSessionPool&lt;/span>&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">getSession&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;petra&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;test source&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String encryptString &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> String&lt;span style="color:#ff79c6">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String decryptString &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> String&lt;span style="color:#ff79c6">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyName &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> String&lt;span style="color:#ff79c6">(&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;ARIA256&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String plainString &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> String&lt;span style="color:#ff79c6">(&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;Follow your heart.&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encryptString &lt;span style="color:#ff79c6">=&lt;/span> session&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">encrypt&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>keyNameOrg&lt;span style="color:#ff79c6">,&lt;/span> plainString&lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> decryptString &lt;span style="color:#ff79c6">=&lt;/span> session&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">decrypt&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>keyNameOrg&lt;span style="color:#ff79c6">,&lt;/span> encryptString&lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">}&lt;/span> &lt;span style="color:#ff79c6">catch&lt;/span> &lt;span style="color:#ff79c6">(&lt;/span>PcaException e&lt;span style="color:#ff79c6">)&lt;/span> &lt;span style="color:#ff79c6">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">out&lt;/span>&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">println&lt;/span>&lt;span style="color:#ff79c6">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;error_code = &amp;#34;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> e&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">getErrCode&lt;/span>&lt;span style="color:#ff79c6">()&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34; error_message = &amp;#34;&lt;/span> &lt;span style="color:#ff79c6">+&lt;/span> e&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#50fa7b">getMessage&lt;/span>&lt;span style="color:#ff79c6">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span>&lt;span style="color:#ff79c6">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>주어진 예제 소스 코드는 PetraCipher 라이브러리인 &lt;strong>libpcjapi.so&lt;/strong>를 사용하여 세션을 얻고 암호화/복호화 함수를 사용하는 방법을 보여주는 예시입니다.&lt;/p>
&lt;p>소스 코드에서는 PcAPIL.h 헤더 파일을 사용하여 PetraCipher 라이브러리를 호출합니다. &lt;strong>PcaSessionPool 클래스의 getSession()&lt;/strong> 함수를 사용하여 &lt;strong>PcaSession&lt;/strong> 객체를 얻고, &lt;strong>PcaSession&lt;/strong> 클래스의 &lt;strong>encrypt()&lt;/strong> 및 &lt;strong>decrypt()&lt;/strong> 함수를 사용하여 데이터를 암호화하고 복호화합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리를 사용하려면 먼저 세션을 얻어야하며, 각 함수에서 암호화 키 이름, 평문 데이터 등을 매개변수로 전달해야합니다.&lt;/p>
&lt;p>PetraCipher 라이브러리는 데이터 보호 및 안전한 통신을 위해 설계되었으며 다양한 애플리케이션에서 사용할 수 있습니다. 제공된 소스 코드는 라이브러리의 기본 사용법을 보여주며, 더 자세한 정보는 라이브러리의 문서에서 확인할 수 있습니다.&lt;/p></description></item><item><title>Docs: Classes</title><link>https://sinsiway-official.github.io/docs/java/classes/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/</guid><description/></item><item><title>Docs: sinsiway.PcaSession class</title><link>https://sinsiway-official.github.io/docs/java/classes/pca-session/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/java/classes/pca-session/</guid><description>
&lt;p>PcaSession 클래스는 보안 인증 및 데이터 암복호화를 위한 메서드를 제공하는 클래스입니다.&lt;/p>
&lt;p>이 클래스는 네이티브 인터페이스 라이브러리 libpcjapi.so를 사용하며, 암호화 복호화 메서드를 사용합니다. 이 클래스를 사용하면 데이터 암호화 및 복호화를 보다 안전하고 효율적으로 수행할 수 있습니다.&lt;/p></description></item><item><title>Docs: Methods</title><link>https://sinsiway-official.github.io/docs/c-cpp/methods/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://sinsiway-official.github.io/docs/c-cpp/methods/</guid><description/></item></channel></rss>