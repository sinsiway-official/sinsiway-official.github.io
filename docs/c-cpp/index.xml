<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Petra Cipher Docs – C/C&#43;&#43;</title>
    <link>https://sinsiway-official.github.io/docs/c-cpp/</link>
    <description>Recent content in C/C&#43;&#43; on Petra Cipher Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 11 Apr 2023 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://sinsiway-official.github.io/docs/c-cpp/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Get Started</title>
      <link>https://sinsiway-official.github.io/docs/c-cpp/get-started/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sinsiway-official.github.io/docs/c-cpp/get-started/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;libpcapi.so&lt;/strong&gt;는 신시웨이에서 개발한 &lt;strong&gt;C/C++ 암호화 라이브러리&lt;/strong&gt;입니다. 이 라이브러리는 &lt;strong&gt;GCC&lt;/strong&gt; 컴파일러 환경에서 동작하며, 데이터를 암호화하거나 복호화하는 기능을 수행할 수 있습니다. 이를 위해 페트라 싸이퍼 키(Petra Cipher Key Server) 서버로부터 세션을 얻고, 키 서버로부터 받은 암호화 키를 사용하여 작업을 수행합니다.&lt;/p&gt;
&lt;p&gt;libpcapi.so는 암호화 기능이 필요한 애플리케이션에서 &lt;strong&gt;동적 라이브러리로&lt;/strong&gt; 사용할 수 있습니다. 라이브러리를 사용하기 위해서는 애플리케이션이 libpcapi.so 라이브러리 파일을 링크해야 합니다.&lt;/p&gt;
&lt;p&gt;라이브러리 초기화 함수는 키 서버 정보를 설정하기 위한 구성 파일을 사용하며, 구성 파일의 위치를 지정할 수 있는 함수를 제공합니다. 이를 통해 사용자는 애플리케이션 실행 시점에 구성 파일의 위치를 지정하여 라이브러리를 초기화할 수 있습니다.&lt;/p&gt;
&lt;p&gt;libpcapi.so는 다양한 애플리케이션에서 사용될 수 있는 암호화 라이브러리입니다.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Implementation</title>
      <link>https://sinsiway-official.github.io/docs/c-cpp/implementation/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sinsiway-official.github.io/docs/c-cpp/implementation/</guid>
      <description>
        
        
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;PcAPIL.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;argv[])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; encryptText[&lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; decryptText[&lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; sid &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; PcAPI_getSession(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;keyName &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ARIA-256-B64&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; rtn &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;plainText &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sinsiway petra cipher&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; encryptTextLen &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; decryptTextLen &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    memset(encryptText, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, encryptTextLen);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    memset(decryptText, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, decryptTextLen);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtn &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; PcAPI_encrypt_name(sid, keyName, plainText, strlen((&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;)plainText), encryptText, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;encryptTextLen);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rtn &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; PcAPI_decrypt_name(sid, keyName, encryptText, encryptTextLen, decryptText, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;decryptTextLen);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;주어진 예제 소스 코드는 PetraCipher 라이브러리인 &lt;strong&gt;libpcapi.so&lt;/strong&gt;를 사용하여 세션을 얻고 암호화/복호화 함수를 사용하는 방법을 보여주는 예시입니다.&lt;/p&gt;
&lt;p&gt;소스 코드에서는 PcAPIL.h 헤더 파일을 사용하여 PetraCipher 라이브러리를 호출합니다. &lt;strong&gt;PcAPI_getSession()&lt;/strong&gt; 함수를 사용하여 &lt;strong&gt;세션 ID&lt;/strong&gt;를 얻고, &lt;strong&gt;PcAPI_encrypt_name()&lt;/strong&gt; 및 &lt;strong&gt;PcAPI_decrypt_name()&lt;/strong&gt; 함수를 사용하여 데이터를 암호화하고 복호화합니다.&lt;/p&gt;
&lt;p&gt;PetraCipher 라이브러리를 사용하려면 먼저 세션을 얻어야하며, 각 함수에서 세션 ID, 암호화 키 이름, 평문 데이터 등을 매개변수로 전달해야합니다.&lt;/p&gt;
&lt;p&gt;PetraCipher 라이브러리는 데이터 보호 및 안전한 통신을 위해 설계되었으며 다양한 애플리케이션에서 사용할 수 있습니다. 제공된 소스 코드는 라이브러리의 기본 사용법을 보여주며, 더 자세한 정보는 라이브러리의 문서에서 확인할 수 있습니다.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Methods</title>
      <link>https://sinsiway-official.github.io/docs/c-cpp/methods/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sinsiway-official.github.io/docs/c-cpp/methods/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
